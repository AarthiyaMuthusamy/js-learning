javascript from scratch:

what is js?

A technology that we use to create websites

website like -> amazon , youtube
use websites -> App , websites

3 technology:

1. html => creates the content (button , text , img...)
2. css => changes the appearence (look website more user interactive)
3. js => makes it interactive(click button , give result)


setup :

web browser (chrome)


lesson 1:


giving instruction to web browser
it follows the instruction


1) open inspect in web browser:

window function to use popup message
alert('hello') this is an js code


2) Math :

console :  3+3 => 6


3) work with html:
modifying the webpage
document.body.innerHtml = 'hello';


Syntax:

-rules that we have to follow when using a programming language
-similar to english (grammer)
_____________________________________________________

lesson 2: Numbers and Math

like normally calculating maths 

* /  are done first
+ - are done second

* / have the same priority 
2 *  3 / 5 calculate from left to right

+ - have the same priority 
2 + 3 - 5  calculate from left to right

control the calculation using brackets 
have the higher priority then * /
(1+1)*3 = 2*3 = 6

oder of operations:

1) (....)
2) * /
3) + -


how do avoid float values ? 

1) calculated in cents instead of dollars 
2) convert back to dollars

Math.round((2095 +799) * 0.1 ) / 100 => this is a right way to calculate 


_____________________________________________________

lesson 3: Strings 

string = text 
sequence of characters

string enclosed with single / double quotes
3 ways:

1) '...'    -> most commonly used
2) "....."  -> inside use of single queotes
3) `..`     -> template string simpy used with variable / string 

using typeof 'hello' =>  string

string + number = > converted to string 
it automatically convert to string 


'$' + (2095 + 799) / 100 => brackets use to avoid converting number to string 


character:

1) letter (a,b,c..)
2) number (1,2,3..)
3) sybmol (!,@,#..)
4) escape character \' -> it doesn't create start or end
5) \n newline 

template string: 

interpolation : directly insert values to the string 
multi-line strings : used to be multi line string
`Items (${1+1}): $${(2095 + 799) / 100}` : 'Items (2): $28.94'

_____________________________________________________________

lesson 4: HTML CSS Review, console.log

HTML -> hypertext markup language

using tags -> 

p -> paragraph , 
button -> button , 
h1 -> header 
style -> it adds css to the tags
title -> used in tags (atrribute give an result when hover over the button / header )
class -> its an name of an tag used to add css property( we can add same class to all the button or different button)
script -> adding js code here 
it runs first then the other tag js code runs

automatically refresh the webpage using extensions -> Liveserver
setup the indents to look good on code
shift + tab -> remove indent
tab -> indent increase

Line Wrapping -> if the line is too long 



Js comments:
single -line 
 // -> anything after this it will ignored
1) use comments to understand the part code , what should done 

2) it just remove the code temporarily , after sometime it needs

multi-line:

/* 

*/


______________________________________________________________


lesson 5: variables

variable is an container to store value 

👉🏻syntax rule for variable:

assigning variable :
variablekeyword variablename = value;
let value = 3;

variable name restrictions:
can't use reserved words ❌
can't start with number ❌
can't use special char (except $ , _) ❌

; -> end of the instruction
after ; use another code without any problem

console.log(); console.log()✅


re-assigning value:
variablename = value;
value = 5;




name declaration: 

camelcase - cartQuantity
PascalCase  - CartQuantity
kebav-case  - (cart-quantity) use in HTML and CSS
snake_came - used in other language



3 ways to create variable:

let -> can be change after sometime 
const -> can't be changed the value later
var - > variable mean 

1) Use const for variables whose values are not expected to change throughout the program's execution.
2) Use let for variables whose values are expected to change.
3) Avoid using var in modern JavaScript development due to its less predictable scoping and hoisting behavior compared to let and const.


typeof - > return the type of variable (number, string, float..)

_____________________________________________________

lesson 6 : Booleans and if-Statements

Boolean another type of value 
have two values ->  True, False
it represents if the value id true or False

Syntax rules for Booleans:

true
false

comparison operators:

> greater than
< less than
>= greater than equal to
<= less than equal to
=== equal to  (check the value and type) ✅
==   equal to (check the value) ❌
!==  not equal to ✅

comparison operators are in 4th prioirty 

if-Statements:

-lets us to write multiple group of code
-if condition is true then decide which code to run


if-else Statements:

if condition true code run
else other code run

if-else if -else:
add multiple conditional Statements to run

Logical operators: 

use to combine boolean values
logical operators have the 5th priority.

&& , || , !

Truthy and falsy values:

0 - behaves like false
1 - behaves like true


falsy values :

false ,  0 , ' ' , NaN(Not a NUmber) , undefined , null


ternary operators :

shortcut of if Statements
i can store it an variable 

guard operators:

using && to create if condition 
i can store it an variable 


Default operator:

true || value2 -> right side is ture no need to check the second value


_____________________________________________________________

lesson 7: Functions

why? 
you can run block of code to many times.
function make us update the code easier

Syntax rules for function:

function function_name(){

}

function -> creates new function
function_name -> we can't use  special characters , Numbers

we have to use the function we need to call the function in below

return -> gets a value out of function
return calculation , variable , function
return end the function immediately 

parameter -> puts a value into a function

Syntax rules for parameter:

can't use special words. ex: function
can't start with a number
can't use special characters. except: $ , _

only use the parameter inside the function

_____________________________________________________________

lesson 8: Objects

group of values 

in object the values are exist, it  updates the old value 
else it will add the new value

Syntax rules for object:

using property value pair , separated with comma
have property and the values of the property


delete:
using delete keyword to del the value in object

indise the value of object also a object 
using typeof (object_name)

obj -> more organised for values
       let us group multiple values together
       let us use multiple values together
       inside an object , we can save any type of value

how many ways to access the object value:

1) dot notation - by Default use dot notation
2) bracket notation - use these don't work with an dot notation
       

use nested object : object inside object 
use function to an object create indise : this is called method



example of method: 

Math.random()
console.log() 
throughout the program we use with object to function

built-in objects:

provided by the js,
JSon  - javascipt object notation
localstorage 

json: 
helps us work with json 
a Syntax 
similar to js object 
but has less features 
all data using double quotes , not support single quotes 
not support function 
it have universal code send data to computers 

built -in json object :

js to json:
JSON.stringify(object_name)

json to js :
JSON.parse()

localstorage : 
 save the values more permantly
 variable are temporary 
 if we refresh / close the page ,
 all the variable are deleted


Auto-boxing:

string treat as special object to wrap as object.
work eith number and other values

this not work with null and undefined

object reference:

object store into on memory -> it reference the object variable 
ex:
icon shortcut to point to the original file path

copy by reference:

have same value but different reference

behavior:

it still changing the value , it have const variable.
both are pointing same value so it we change anyone it will change al.
if we create same objcet to another name , try to compare it gives false.
compare two object reference the sake value ,it gives true.

destructing :

helup us to get out a value from the object , using same name to print the variable

simple to use , reduce the variable creation issue

shorthand property and shorthand method:
 instead of using property and value pair are same use name once , don't put into an double name.
 dont't refernece to the method property -> just create function with the variable


lesson 9: DOM (Document Object Model)

it's also an built-in object
document is built-in object 
dot notation to access the property

document.body -> changing the body 
document.title -> changing the titile of the document

Syntax rule:

it have property , and have the value
special thing about dom is access with the webpage
also has method

document.body -> it convert the whole body tag to js object 

querySelector() -> get any element from the page and put in inside js
it access the part of the webpage and put it an js 


have multiple same parts -> we can acces it with .class_name 

DOM combines JS and HTML together.

innerText -> wrap the text inside the button or 

whenever we get input from input tag -> its an string value so check before going to proceed
convert string to number -> using Number() built-in function
also String() function convert str to number

js automatically convert string with  - ,* ,/ operations =>  type convertion



css have another property onkeydown
clicks , keydowns => events
onclick , onkeydown => event listeners

event listeners:

onclick = click
onkeydown = key press
onscroll = scrolling 
onmouseenter = hovering over
onmouseleave = stop hovering over 


_____________________________________________________________


lesson 10 : HTML , CSS and JavaScript together