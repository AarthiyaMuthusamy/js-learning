javascript from scratch:

what is js?

A technology that we use to create websites

website like -> amazon , youtube
use websites -> App , websites

3 technology:

1. html => creates the content (button , text , img...)
2. css => changes the appearence (look website more user interactive)
3. js => makes it interactive(click button , give result)


setup :

web browser (chrome)


lesson 1:


giving instruction to web browser
it follows the instruction


1) open inspect in web browser:

window function to use popup message
alert('hello') this is an js code


2) Math :

console :  3+3 => 6


3) work with html:
modifying the webpage
document.body.innerHtml = 'hello';


Syntax:

-rules that we have to follow when using a programming language
-similar to english (grammer)
_____________________________________________________

lesson 2: Numbers and Math

like normally calculating maths 

* /  are done first
+ - are done second

* / have the same priority 
2 *  3 / 5 calculate from left to right

+ - have the same priority 
2 + 3 - 5  calculate from left to right

control the calculation using brackets 
have the higher priority then * /
(1+1)*3 = 2*3 = 6

oder of operations:

1) (....)
2) * /
3) + -


how do avoid float values ? 

1) calculated in cents instead of dollars 
2) convert back to dollars

Math.round((2095 +799) * 0.1 ) / 100 => this is a right way to calculate 


_____________________________________________________

lesson 3: Strings 

string = text 
sequence of characters

string enclosed with single / double quotes
3 ways:

1) '...'    -> most commonly used
2) "....."  -> inside use of single queotes
3) `..`     -> template string simpy used with variable / string 

using typeof 'hello' =>  string

string + number = > converted to string 
it automatically convert to string 


'$' + (2095 + 799) / 100 => brackets use to avoid converting number to string 


character:

1) letter (a,b,c..)
2) number (1,2,3..)
3) sybmol (!,@,#..)
4) escape character \' -> it doesn't create start or end
5) \n newline 

template string: 

interpolation : directly insert values to the string 
multi-line strings : used to be multi line string
`Items (${1+1}): $${(2095 + 799) / 100}` : 'Items (2): $28.94'

_____________________________________________________________

lesson 4: HTML CSS Review, console.log

HTML -> hypertext markup language

using tags -> 

p -> paragraph , 
button -> button , 
h1 -> header 
style -> it adds css to the tags
title -> used in tags (atrribute give an result when hover over the button / header )
class -> its an name of an tag used to add css property( we can add same class to all the button or different button)
script -> adding js code here 
it runs first then the other tag js code runs

automatically refresh the webpage using extensions -> Liveserver
setup the indents to look good on code
shift + tab -> remove indent
tab -> indent increase

Line Wrapping -> if the line is too long 



Js comments:
single -line 
 // -> anything after this it will ignored
1) use comments to understand the part code , what should done 

2) it just remove the code temporarily , after sometime it needs

multi-line:

/* 

*/


______________________________________________________________


lesson 5: variables

variable is an container to store value 

👉🏻syntax rule for variable:

assigning variable :
variablekeyword variablename = value;
let value = 3;

variable name restrictions:
can't use reserved words ❌
can't start with number ❌
can't use special char (except $ , _) ❌

; -> end of the instruction
after ; use another code without any problem

console.log(); console.log()✅


re-assigning value:
variablename = value;
value = 5;




name declaration: 

camelcase - cartQuantity
PascalCase  - CartQuantity
kebav-case  - (cart-quantity) use in HTML and CSS
snake_came - used in other language



3 ways to create variable:

let -> can be change after sometime 
const -> can't be changed the value later
var - > variable mean 

1) Use const for variables whose values are not expected to change throughout the program's execution.
2) Use let for variables whose values are expected to change.
3) Avoid using var in modern JavaScript development due to its less predictable scoping and hoisting behavior compared to let and const.


typeof - > return the type of variable (number, string, float..)

_____________________________________________________

lesson 6 : Booleans and if-Statements